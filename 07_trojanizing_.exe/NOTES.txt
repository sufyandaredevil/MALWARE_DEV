Steps to create the shellcode with msfconsole:
> msfconsole
> cd <any_folder>
> use payload/windows/exec
> set CMD mspaint.exe
> set EXITFUNC thread
[> set options]
[> generate -h]
> generate -f raw -o mspaint32_shellcode.bin
> quit

The created mspaint32_shellcode.bin can be changed from binary to C using HxD as follows:
1. open the file using HxD
2. Goto File > Export > C
This in result create a C source code with the code in an array(array of shellcode)

Make use of the 0_shellcoderunner/shellcoderunner.cpp file to replace the shellcode created into the shellcodePayload[] array
Also make sure that the lengthOfshellcodePayload is changed i.e. it should be len(shellcodePayload)
Before compiling shellcoderunner.cpp using 0_shellcoderunner/compile.bat change /MACHINE to x86

Now we need to attach the shellcode into the benign .exe file.
1. Open xdbg and identify address of code cave(place in .exe where there are a bunch of NULL opcodes)
2. Copy out first few lines of EntryPoint
3. Insert jmp to code cave at start of EntryPoint (use fill with NOPs. Also notice how many instructions are overwritten cause we need to insert them in the code cave below)
4. Save registers using pushad
5. Save flags using pushfd
6. Insert Shellcode
7. Restore flags using popfd
8. Restore registers using popad
9. Insert overwritten instructions
10. Insert jmp back to beginning of EntryPoint just after the jmp to code cave
11. Test & debug to see whether shellcode cause program to exit/not
12. Assemble a jmp to bypass the exit and go to code cave
13. Patch and save to file
